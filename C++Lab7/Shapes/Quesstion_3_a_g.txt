


1. #SHAPES_H



#pragma once

namespace shapes 
{
    class Square 
	{
    private:
	
        double sideLength;
		
    public:
	
        Square();
		
        Square(double side);
		
        double getSideLength() const;
		
        void setSideLength(double side);
		
        ~Square();
    };
}









#pragma once

namespace shapes 
{
    class Triangle 
	{
    private:
	
        double base;
		
        double height;
		
    public:
	
        Triangle();
		
        Triangle(double b, double h);
		
        double getBase() const;
		
        double getHeight() const;
		
        void setBase(double b);
		
        void setHeight(double h);
		
        ~Triangle();
    };
}










#pragma once

namespace shapes 
{
    class Circle 
	{
		
    private:
	
        double radius;
		
    public:
	
        Circle();
		
        Circle(double r);
		
        double getRadius() const;
		
        void setRadius(double r);
		
        ~Circle();
    };
}









#pragma once

#include "Square.h"
#include "Triangle.h"
#include "Circle.h"

namespace shapes 
{
    class Area 
	{
		
    public:
	
        static double calculateArea(const Square& square);
		
        static double calculateArea(const Triangle& triangle);
		
        static double calculateArea(const Circle& circle);
    };
}











2. #SHAPES_CPP





#include "Square.h"

namespace shapes 
{
    Square::Square() : sideLength(0.0) 
	{
		
	}

    Square::Square(double side) : sideLength(side) 
	{
		
	}

    double Square::getSideLength() const 
	{
        return sideLength;
    }

    void Square::setSideLength(double side) 
	{
        sideLength = side;
    }

    Square::~Square() 
	{
		
	}
}







#include "Triangle.h"

namespace shapes 
{
    Triangle::Triangle() : base(0.0), height(0.0) 
	{
		
	}

    Triangle::Triangle(double b, double h) : base(b), height(h) 
	{
		
	}

    double Triangle::getBase() const 
	{
        return base;
    }

    double Triangle::getHeight() const 
	{
        return height;
    }

    void Triangle::setBase(double b) 
	{
        base = b;
    }

    void Triangle::setHeight(double h) 
	{
        height = h;
    }

    Triangle::~Triangle() 
	{
		
	}
}









#include "Circle.h"

namespace shapes 
{
    Circle::Circle() : radius(0.0) 
	{
		
	}

    Circle::Circle(double r) : radius(r) 
	{
		
	}

    double Circle::getRadius() const 
	{
        return radius;
    }

    void Circle::setRadius(double r) 
	{
        radius = r;
    }

    Circle::~Circle() {}
}









#include "AreaOfShapes.h"
#include <cmath>

namespace shapes 
{
    double Area::calculateArea(const Square& square) 
	{
        return square.getSideLength() * square.getSideLength();
    }

    double Area::calculateArea(const Triangle& triangle) 
	{
        return 0.5 * triangle.getBase() * triangle.getHeight();
    }

    double Area::calculateArea(const Circle& circle) 
	{
        return M_PI * circle.getRadius() * circle.getRadius();
    }
}














3. #AREA_H




#include <iostream>
#include "Square.h"
#include "Triangle.h"
#include "Circle.h"
#include "AreaOfShapes.h"

using namespace std;

using namespace shapes;

int main() 
{
    char choice;
    do {
        cout << "Choose a shape to calculate area:" << endl;
        cout << "1. Square" << endl;
        cout << "2. Triangle" << endl;
        cout << "3. Circle" << endl;
        cout << "4. Quit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) 
		{
            case '1': 
			{
                double length;
                cout << "Enter side length of the square: ";
                cin >> length;
                Square square(length);
                cout << "Area of the square: " << Area::calculateArea(square) << endl;
                break;
            }
            case '2': 
			{
                double base, height;
                cout << "Enter base length of the triangle: ";
                cin >> base;
                cout << "Enter height of the triangle: ";
                cin >> height;
                Triangle triangle(base, height);
                cout << "Area of the triangle: " << Area::calculateArea(triangle) << endl;
                break;
            }
            case '3': 
			{
                double radius;
                cout << "Enter radius of the circle: ";
                cin >> radius;
                Circle circle(radius);
                cout << "Area of the circle: " << Area::calculateArea(circle) << endl;
                break;
            }
            case '4':
                cout << "Exiting program." << endl;
                break;
            default:
                cout << "Invalid choice. Please enter again." << endl;
        }
    } while (choice != '4');

    return 0;
}


